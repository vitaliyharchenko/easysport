# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2015-12-15 07:13
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True, verbose_name='Email')),
                ('is_active', models.BooleanField(default=True, help_text='Вместо удаления аккаунта, сделайте его неактивным', verbose_name='Активность')),
                ('is_referee', models.BooleanField(default=False, help_text='Может судить игры', verbose_name='Судья')),
                ('is_coach', models.BooleanField(default=False, help_text='Может вести тренеровки', verbose_name='Тренер')),
                ('is_responsible', models.BooleanField(default=False, help_text='Заполняет отчеты, редактирует игры', verbose_name='Ответственный')),
                ('is_organizer', models.BooleanField(default=False, help_text='Создает игры, площадки, назначает ответственных', verbose_name='Организатор')),
                ('is_admin', models.BooleanField(default=False, help_text='Назначает организаторов, работает с зарплатами и базами данных', verbose_name='Админ')),
                ('is_staff', models.BooleanField(default=False, help_text='Определяет, может ли пользователь войти в админку', verbose_name='Редактор')),
                ('banned', models.BooleanField(default=False, help_text='Банит пользователя', verbose_name='Забанен')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars', verbose_name='Аватар')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата регистрации')),
                ('bdate', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('first_name', models.CharField(max_length=120, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=120, verbose_name='Фамилия')),
                ('vkuserid', models.IntegerField(blank=True, null=True, unique=True)),
                ('sex', models.CharField(choices=[('m', 'мужской'), ('f', 'женский')], max_length=1, verbose_name='Пол')),
                ('phone', utils.fields.PhoneField(blank=True, max_length=128, verbose_name='Телефон')),
                ('weight', models.PositiveSmallIntegerField(default=0, verbose_name='Вес')),
                ('height', models.PositiveSmallIntegerField(default=0, verbose_name='Рост')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
                'verbose_name': 'Игрок',
                'swappable': 'AUTH_USER_MODEL',
                'abstract': False,
                'verbose_name_plural': 'Игроки',
            },
        ),
        migrations.CreateModel(
            name='UserActivation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activation_key', models.CharField(blank=True, max_length=40)),
                ('request_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('confirm_time', models.DateTimeField(blank=True, null=True, verbose_name='Дата активации')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Активации',
            },
        ),
    ]
