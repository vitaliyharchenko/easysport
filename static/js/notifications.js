$(document).ready(function(){var t="{{ notifications_new|length }}";"0"!=t&&($(".notifications .alert").each(function(){$(this).fadeIn("slow")}),setTimeout(function(){$.ajax({url:"{% url 'notification_read' %}",data:{csrfmiddlewaretoken:"{{ csrf_token }}"},async:!0,success:function(t,n){(t.response="OK")?$(".notifications .alert").each(function(){$(this).fadeOut("slow")}):alert("Ошибка чтения уведомлений")},error:function(t,n,o){alert("Все плохо, расскажите нам про эту ошибку \n\r\n\r"+t+n+o),console.log(t)},type:"POST",dataType:"json"})},6e3))}),$(document).on("click",".delete-notification",function(){var t=$(this).attr("id").split("-"),n=t[1];$.ajax({url:"{% url 'notification_delete' %}",data:{csrfmiddlewaretoken:"{{ csrf_token }}",notification_id:n},async:!0,success:function(t,n){var o=$(".notifications-count").html();o-=1,0==o?($(".notifications-menu-item").html(""),$("#notificationsModal").modal("hide")):$(".notifications-count").html(o)},error:function(t,n,o){alert("Все плохо, расскажите нам про эту ошибку \n\r\n\r"+t+n+o),console.log(t)},type:"POST",dataType:"json"})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbnMuanMiXSwibmFtZXMiOlsiJCIsImRvY3VtZW50IiwicmVhZHkiLCJjb3VudCIsImVhY2giLCJ0aGlzIiwiZmFkZUluIiwic2V0VGltZW91dCIsImFqYXgiLCJ1cmwiLCJkYXRhIiwiY3NyZm1pZGRsZXdhcmV0b2tlbiIsImFzeW5jIiwic3VjY2VzcyIsInRleHRTdGF0dXMiLCJmYWRlT3V0IiwiYWxlcnQiLCJlcnJvciIsInJlc3BvbnNlIiwic3RhdHVzIiwiZXJyb3JUaHJvd24iLCJjb25zb2xlIiwibG9nIiwidHlwZSIsImRhdGFUeXBlIiwib24iLCJhcnIiLCJhdHRyIiwic3BsaXQiLCJub3RpZmljYXRpb25faWQiLCJodG1sIiwibW9kYWwiXSwibWFwcGluZ3MiOiJBQUFBQSxFQUFFQyxVQUFVQyxNQUFNLFdBQ2QsR0FBSUMsR0FBUSxnQ0FDQyxNQUFUQSxJQUNBSCxFQUFFLHlCQUF5QkksS0FBSyxXQUM1QkosRUFBRUssTUFBTUMsT0FBTyxVQUVuQkMsV0FBVyxXQUNQUCxFQUFFUSxNQUNFQyxJQUFLLGdDQUNMQyxNQUNJQyxvQkFBcUIsb0JBRXpCQyxPQUFPLEVBQ1BDLFFBQVMsU0FBVUgsRUFBTUksSUFDakJKLEVBQWUsU0FBSSxNQUNuQlYsRUFBRSx5QkFBeUJJLEtBQUssV0FDNUJKLEVBQUVLLE1BQU1VLFFBQVEsVUFHcEJDLE1BQU0sOEJBR2RDLE1BQU8sU0FBVUMsRUFBVUMsRUFBUUMsR0FDL0JKLE1BQU0sb0RBQXNERSxFQUFXQyxFQUFTQyxHQUNoRkMsUUFBUUMsSUFBSUosSUFFaEJLLEtBQU0sT0FDTkMsU0FBVSxVQUVmLFFBSVh4QixFQUFFQyxVQUFVd0IsR0FBRyxRQUFRLHVCQUF3QixXQUMzQyxHQUFJQyxHQUFNMUIsRUFBRUssTUFBTXNCLEtBQUssTUFBTUMsTUFBTSxLQUMvQkMsRUFBa0JILEVBQUksRUFDMUIxQixHQUFFUSxNQUNFQyxJQUFLLGtDQUNMQyxNQUNJQyxvQkFBcUIsbUJBQ3JCa0IsZ0JBQWlCQSxHQUVyQmpCLE9BQU8sRUFDUEMsUUFBUyxTQUFVSCxFQUFNSSxHQUNyQixHQUFJWCxHQUFRSCxFQUFFLHdCQUF3QjhCLE1BQ3RDM0IsSUFBZ0IsRUFDSCxHQUFUQSxHQUNBSCxFQUFFLDRCQUE0QjhCLEtBQUssSUFDbkM5QixFQUFFLHVCQUF1QitCLE1BQU0sU0FFL0IvQixFQUFFLHdCQUF3QjhCLEtBQUszQixJQUd2Q2MsTUFBTyxTQUFVQyxFQUFVQyxFQUFRQyxHQUMvQkosTUFBTSxvREFBc0RFLEVBQVdDLEVBQVNDLEdBQ2hGQyxRQUFRQyxJQUFJSixJQUVoQkssS0FBTSxPQUNOQyxTQUFVIiwiZmlsZSI6Im5vdGlmaWNhdGlvbnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGNvdW50ID0gXCJ7eyBub3RpZmljYXRpb25zX25ld3xsZW5ndGggfX1cIlxuICAgIGlmIChjb3VudCAhPSBcIjBcIikge1xuICAgICAgICAkKCcubm90aWZpY2F0aW9ucyAuYWxlcnQnKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICQodGhpcykuZmFkZUluKCdzbG93Jyk7XG4gICAgICAgIH0pO1xuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICAgICAgdXJsOiBcInslIHVybCAnbm90aWZpY2F0aW9uX3JlYWQnICV9XCIsXG4gICAgICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgICAgICBjc3JmbWlkZGxld2FyZXRva2VuOiAne3sgY3NyZl90b2tlbiB9fSdcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGFzeW5jOiB0cnVlLFxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhLCB0ZXh0U3RhdHVzKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChkYXRhWydyZXNwb25zZSddID0gJ09LJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgJCgnLm5vdGlmaWNhdGlvbnMgLmFsZXJ0JykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5mYWRlT3V0KCdzbG93Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KCfQntGI0LjQsdC60LAg0YfRgtC10L3QuNGPINGD0LLQtdC00L7QvNC70LXQvdC40LknKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChyZXNwb25zZSwgc3RhdHVzLCBlcnJvclRocm93bikge1xuICAgICAgICAgICAgICAgICAgICBhbGVydCgn0JLRgdC1INC/0LvQvtGF0L4sINGA0LDRgdGB0LrQsNC20LjRgtC1INC90LDQvCDQv9GA0L4g0Y3RgtGDINC+0YjQuNCx0LrRgyBcXG5cXHJcXG5cXHInICsgcmVzcG9uc2UgKyBzdGF0dXMgKyBlcnJvclRocm93bik7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sIDYwMDApO1xuICAgIH1cbn0pO1xuXG4kKGRvY3VtZW50KS5vbignY2xpY2snLCcuZGVsZXRlLW5vdGlmaWNhdGlvbicsIGZ1bmN0aW9uKCl7XG4gICAgdmFyIGFyciA9ICQodGhpcykuYXR0cihcImlkXCIpLnNwbGl0KCctJyk7XG4gICAgdmFyIG5vdGlmaWNhdGlvbl9pZCA9IGFyclsxXTtcbiAgICAkLmFqYXgoe1xuICAgICAgICB1cmw6IFwieyUgdXJsICdub3RpZmljYXRpb25fZGVsZXRlJyAlfVwiLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBjc3JmbWlkZGxld2FyZXRva2VuOiAne3sgY3NyZl90b2tlbiB9fScsXG4gICAgICAgICAgICBub3RpZmljYXRpb25faWQ6IG5vdGlmaWNhdGlvbl9pZFxuICAgICAgICB9LFxuICAgICAgICBhc3luYzogdHJ1ZSxcbiAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEsIHRleHRTdGF0dXMpIHtcbiAgICAgICAgICAgIHZhciBjb3VudCA9ICQoXCIubm90aWZpY2F0aW9ucy1jb3VudFwiKS5odG1sKCk7XG4gICAgICAgICAgICBjb3VudCA9IGNvdW50IC0gMTtcbiAgICAgICAgICAgIGlmIChjb3VudCA9PSAwKSB7XG4gICAgICAgICAgICAgICAgJChcIi5ub3RpZmljYXRpb25zLW1lbnUtaXRlbVwiKS5odG1sKCcnKTtcbiAgICAgICAgICAgICAgICAkKCcjbm90aWZpY2F0aW9uc01vZGFsJykubW9kYWwoJ2hpZGUnKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAkKFwiLm5vdGlmaWNhdGlvbnMtY291bnRcIikuaHRtbChjb3VudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGVycm9yOiBmdW5jdGlvbiAocmVzcG9uc2UsIHN0YXR1cywgZXJyb3JUaHJvd24pIHtcbiAgICAgICAgICAgIGFsZXJ0KCfQktGB0LUg0L/Qu9C+0YXQviwg0YDQsNGB0YHQutCw0LbQuNGC0LUg0L3QsNC8INC/0YDQviDRjdGC0YMg0L7RiNC40LHQutGDIFxcblxcclxcblxccicgKyByZXNwb25zZSArIHN0YXR1cyArIGVycm9yVGhyb3duKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgICAgICAgfSxcbiAgICAgICAgdHlwZTogXCJQT1NUXCIsXG4gICAgICAgIGRhdGFUeXBlOiBcImpzb25cIlxuICAgIH0pO1xufSk7Il19
